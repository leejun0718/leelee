package com.itwill.board.boardNotice.controller;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import com.itwill.board.boardNotice.BoardNotice;
import com.itwill.board.boardNotice.BoardNoticeService;
import com.itwill.board.boardNotice.PageMakerInput;
import com.itwill.board.boardNotice.PageMakerOutput;


@Controller
public class BoardNoticeController {
	
	@Autowired
	private BoardNoticeService boardnoticeService;
	
	
	
	@RequestMapping("/boardNoticeList.do")
	public String boardNoticeList(@RequestParam(value="pageno",defaultValue="1",required=false) String pageno,
								  Model model) {
		
		String forwardPath ="";
	//	int rowCountPerPage = Integer.parseInt("rowCountPerPageStr");
	//	int pageCountPerPage = Integer.parseInt("pageCountPerPageStr");
		
		//1.요청페이지번호	
		
		
		if(pageno==null||pageno.equals("")){
			pageno="1";
		}
		//2.한페이지에표시할 게시물수 
		int rowCountPerPage = 20;
		//3.한페이지에보여줄 페이지번호갯수(<< 1 2 3 4 5 >>)
		int pageCountPerPage = 7;
		
		try {
			//페이징(계산)을위한DTO,VO  
			PageMakerInput pageInputDto=
					new PageMakerInput(rowCountPerPage,pageCountPerPage,pageno);
			
			
			//게시물조회
			PageMakerOutput boardListPage 
			=boardnoticeService.boardNoticeCount(pageInputDto);
			//마지막 페이지를 마지막 페이지 블록과 현재 페이지 블록 번호로 정함
			//List<BoardNotice> boardNoticeList = new ArrayList<>();
			model.addAttribute("boardListPage",boardListPage);
		
			forwardPath="forward:/WEB-INF/view/board_list22.jsp";
	
			
		} catch (Exception e) {
			forwardPath="forward:/WEB-INF/view/error.jsp";
			e.printStackTrace();
		}
		return forwardPath;
	}

	
	//리스트디테일 view
	@RequestMapping("boardNoticeView.do")
	public String boardNoticeView(@RequestParam(value="noticeno")String noticeno,Model model) {
		String forwardPath ="";
		
		try {
			BoardNotice boardNotice =  boardnoticeService.boardNoticeSelectByMemberNo(Integer.parseInt(noticeno));
			int boardNoticenoticeinquiryUpdate = boardnoticeService.boardNoticenoticeinquiryUpdate(Integer.parseInt(noticeno));
			if (boardNotice == null) {
				forwardPath ="redirect:boardNoticeList.do";
			}else {
				model.addAttribute("boardNotice", boardNotice);
				model.addAttribute("boardNoticenoticeinquiryUpdate", boardNoticenoticeinquiryUpdate);
				forwardPath ="forward:/WEB-INF/view/board_view.jsp";
				
			}
			
		} catch (Exception e) {
			forwardPath="forward:/WEB-INF/view/error.jsp";
			e.printStackTrace();
		}
		
		return forwardPath;
		
	}
	@RequestMapping(value="boardnotice_modify_form.do",method=RequestMethod.POST)
	public String boardnotice_modify_form(@RequestParam(value="noticeno",required=false,defaultValue="1") String noticeno,Model model) {
		String forwardPath ="";
		
		
		try {
			BoardNotice boardNotice = boardnoticeService.boardNoticeSelectByMemberNo(Integer.parseInt(noticeno));
			if (boardNotice == null) {
				forwardPath ="redirect:boardNoticeView.do";
			}else {
				model.addAttribute("boardNotice", boardNotice);
				forwardPath ="forward:/WEB-INF/view/Board_Modify_Form.jsp";
				
			}
		} catch (Exception e) {
			forwardPath="forward:/WEB-INF/view/error.jsp";
			e.printStackTrace();
		}
		return forwardPath;
	}
	
	@RequestMapping(value="guest_modify_action.do",method=RequestMethod.POST)
	public String boardnotice_modify_action(@ModelAttribute BoardNotice boardNotice) {
		String forwardPath ="";
		
		
		try {
		int  BoardNoticeUpdate = boardnoticeService.boardNoticeUpdate(boardNotice); 
		if (BoardNoticeUpdate==1) {
			forwardPath="redirect:boardNoticeView.do?noticeno="+boardNotice.getNoticeno();
		}else {
			forwardPath="forward:/WEB-INF/view/error.jsp";
			
		}
		
		} catch (Exception e) {
			forwardPath="forward:/WEB-INF/view/error.jsp";
			e.printStackTrace();
		}
		
		
		return forwardPath;
	}
	
	@RequestMapping(value="boardnotice_delete_action.do",method=RequestMethod.POST)
	public String boardnotice_delete_from(@RequestParam(value="noticeno",required=false,defaultValue="1")String noticeno) {
		String forwardPath ="";
		
		try {
			int BoardNoticeDelete = boardnoticeService.boardNoticedelete(Integer.parseInt(noticeno));
			if (BoardNoticeDelete == 1) {

				forwardPath ="redirect:boardNoticeList.do";
				
			}else {
				forwardPath="forward:/WEB-INF/view/error.jsp";
				
			}
		} catch (Exception e) {
			forwardPath="forward:/WEB-INF/view/error.jsp";
			e.printStackTrace();
		}
		
		
		return forwardPath;
		
	}
	

	
	
	
	
	
}