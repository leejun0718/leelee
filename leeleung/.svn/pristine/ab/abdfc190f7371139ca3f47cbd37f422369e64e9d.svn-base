package com.itwill.board.boardReview.controller;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

import com.itwill.board.boardReview.BoardReview;
import com.itwill.board.boardReview.BoardReviewService;
import com.itwill.board.boardReview.PageMakerInput;
import com.itwill.board.boardReview.PageMakerOutput;

@Controller
public class BoardReviewController {
	@Autowired
	private BoardReviewService boardReviewService;
	
	@RequestMapping("/board_review_list.do")
	public String board_review_list(@RequestParam(value="pageno", required=false, defaultValue="-999") String pageno ,Model model) {
		String forwardPath = "";
		//1.요청페이지번호	
			if(pageno==null||pageno.equals("")){
				pageno="1";
			}
			//2.한페이지에표시할 게시물수 
			int rowCountPerPage = 10;
			//3.한페이지에보여줄 페이지번호갯수(<< 1 2 3 4 5 >>)
			int pageCountPerPage = 5;
		try {
			//페이징(계산)을위한DTO,VO  
			PageMakerInput pageInputDto=
					new PageMakerInput(rowCountPerPage,pageCountPerPage,pageno);
			//게시물조회
			PageMakerOutput boardListPage 
			=boardReviewService.boardReviewCount(pageInputDto);
			//마지막 페이지를 마지막 페이지 블록과 현재 페이지 블록 번호로 정함 
			model.addAttribute("boardListPage", boardListPage);
			forwardPath = "forward:/WEB-INF/view/boardReview_list.jsp";
		} catch (Exception e) {
			e.printStackTrace();
			forwardPath = "forward:/WEB-INF/view/error.jsp";
		}
		return forwardPath;
	}
	
	@RequestMapping("/boardReviewView.do")
	public ModelAndView board_review_view(@RequestParam int reviewNo, HttpSession session) throws Exception {
		// 조회수 증가 처리
		boardReviewService.reviewViewCount(reviewNo, session);
		// Model(데이터) + View(화면) 을 함께 전달하는 객체
		ModelAndView mav = new ModelAndView();
		mav.setViewName("forward:/WEB-INF/view/boardReview_view.jsp");
		mav.addObject("boardReview", boardReviewService.selectByOne(reviewNo));
		return mav;
	}
	
	@RequestMapping("/board_review_insert_form.do")
	public String board_review_insert_form() {
		String forwardPath = "";
		forwardPath = "forward:board_review_insert_form.jsp";
		return forwardPath;
	}
	
	@RequestMapping(value = "/board_review_insert_action.do", method = RequestMethod.POST)
	public String board_review_insert_action(@ModelAttribute BoardReview boardReview) {
		String forwardPath = "";
		try {
			int insertOk = boardReviewService.insertBoardReview(boardReview);
			if(insertOk == 1) {
				forwardPath = "redirect:board_review_list.do?pageno=1";				
			} else {
				forwardPath = "redirect:board_review_insert_form.do";
			}
		} catch (Exception e) {
			e.printStackTrace();
			forwardPath = "forward:board_review_error.jsp";
		}
		return forwardPath;
	}
	
	@RequestMapping(value = "/board_review_update_form.do", method = RequestMethod.POST)
	public String board_review_update_form(@RequestParam("reviewNo") String reviewNo, Model model) {
		String forwardPath = "";
		try {
			BoardReview boardReview = boardReviewService.selectByOne(Integer.parseInt(reviewNo));
			model.addAttribute("boardReview", boardReview);
			forwardPath = "forward:board_review_update_form.jsp";
		}catch (Exception e) {
			e.printStackTrace();
			forwardPath = "redirect:board_review_view.do";
		}
		return forwardPath;
	}
	
	@RequestMapping(value = "/board_review_update_action.do", method = RequestMethod.POST)
	public String board_review_update_action(@ModelAttribute BoardReview boardReview) {
		String forwardPath = "";
		try {
			int updateOk = boardReviewService.updateBoardReview(boardReview);
			if(updateOk == 1) {
				forwardPath = "forward:board_review_view.jsp";
			} else {
				forwardPath = "redirect:board_review_list.do";
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		return forwardPath;
	}
	
	@RequestMapping("/board_review_delete_action.do")
	public String board_review_delete_action(@RequestParam("reviewNo") String reviewNo) {
		String forwardPath = "";
		try {
			int deleteOk = boardReviewService.deleteBoardReview(Integer.parseInt(reviewNo));
			if(deleteOk == 1) {
				forwardPath = "redirect:board_review_list.do";
			} else {
				forwardPath = "redirect:board_review_view.do";
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		return forwardPath;
	}
	
}
